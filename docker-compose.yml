services:

  kafka-zookeeper:
    image: "confluentinc/cp-zookeeper:7.8.0"
    container_name: "kafka-zookeeper"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: "confluentinc/cp-kafka:7.8.0"
    container_name: "kafka"
    depends_on:
      - "kafka-zookeeper"
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "kafka-zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 5s
      timeout: 10s
      retries: 20

  kafka-init:
    image: "confluentinc/cp-kafka:7.8.0"
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      kafka-topics --create --partitions 10 --bootstrap-server kafka:29092 --topic iot.device.events.dev
      kafka-topics --create --partitions 10 --bootstrap-server kafka:29092 --topic iot.cpu.metrics.tooLate
      "

  kafka-control-center:
    image: "confluentinc/cp-enterprise-control-center:7.8.0"
    container_name: "kafka-control-center"
    depends_on:
      - "kafka"
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:29092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  cassandra:
    image: "cassandra:5.0.5"
    ports:
      - "9042:9042"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]
      interval: 5s
      timeout: 10s
      retries: 20

  cassandra-init:
    image: "cassandra:5.0.5"
    depends_on:
      cassandra:
        condition: service_healthy
    restart: no
    volumes:
      - ./common/src/main/resources/cassandra/init.cql:/tmp/init.cql
    command: 'cqlsh cassandra -f /tmp/init.cql'

  web:
    build: ./web-app
    depends_on:
      cassandra:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"

  flink-jobmanager:
    image: "flink:1.20.2-java17"
    container_name: "flink-jobmanager"
    command: jobmanager
    ports:
      - "8081:8081"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager

  flink-taskmanager:
    image: "flink:1.20.2-java17"
    command: taskmanager
    depends_on:
      - "flink-jobmanager"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 1

  job-submitter:
    image: "flink:1.20.2-java17"
    depends_on:
      cassandra:
        condition: service_healthy
      kafka:
        condition: service_healthy
    volumes:
      - ./flink-job/build/libs:/job
    entrypoint: >
      flink run -m flink-jobmanager:8081 /job/flink-job.jar
